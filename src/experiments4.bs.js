// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Hyperapp_hacked = require("./hyperapp_hacked");

function programToJs(param) {
  return {
          init: param[/* init */0],
          update: param[/* update */1],
          view: param[/* view */2],
          subscriptions: param[/* subscriptions */3],
          node: param[/* node */4]
        };
}

function programFromJs(param) {
  return /* record */[
          /* init */param.init,
          /* update */param.update,
          /* view */param.view,
          /* subscriptions */param.subscriptions,
          /* node */param.node
        ];
}

function h(prim, prim$1, prim$2) {
  return Hyperapp_hacked.h(prim, prim$1, prim$2);
}

function app_ext(prim) {
  Hyperapp_hacked.app(prim);
  return /* () */0;
}

function app(program) {
  var prim = programToJs(program);
  Hyperapp_hacked.app(prim);
  return /* () */0;
}

var App = /* module */[
  /* programToJs */programToJs,
  /* programFromJs */programFromJs,
  /* h */h,
  /* app_ext */app_ext,
  /* app */app
];

function log_effect(str) {
  console.log(str);
  return /* () */0;
}

function log(str) {
  return /* `Log */[
          3804260,
          /* tuple */[
            log_effect,
            str
          ]
        ];
}

function delay_effect(param, dispatch) {
  setTimeout(Curry._1(dispatch, param[1]), param[0]);
  return /* () */0;
}

function delay(ms, msg) {
  return /* `Delay */[
          -363575453,
          /* tuple */[
            delay_effect,
            /* tuple */[
              ms,
              msg
            ]
          ]
        ];
}

var EffectTest = /* module */[
  /* log_effect */log_effect,
  /* log */log,
  /* delay_effect */delay_effect,
  /* delay */delay
];

function every_effect(dispatch, param) {
  var id = setInterval(Curry._1(dispatch, param[1]), param[0]);
  return (function (param) {
      clearInterval(id);
      return /* () */0;
    });
}

function every(ms, msg) {
  return /* `Every */[
          150092667,
          /* tuple */[
            every_effect,
            /* tuple */[
              ms,
              msg
            ]
          ]
        ];
}

var SubTest = /* module */[
  /* every_effect */every_effect,
  /* every */every
];

function init(param) {
  return 0;
}

function subscriptions(state) {
  return /* array */[/* `Every */[
            150092667,
            /* tuple */[
              every_effect,
              /* tuple */[
                1000,
                /* Increment */0
              ]
            ]
          ]];
}

function update(state, param) {
  if (typeof param === "number") {
    switch (param) {
      case 0 : 
          return /* tuple */[
                  state + 1 | 0,
                  /* NoFx */870521875
                ];
      case 1 : 
          return /* tuple */[
                  state - 1 | 0,
                  /* NoFx */870521875
                ];
      case 2 : 
          return /* tuple */[
                  state,
                  /* `Log */[
                    3804260,
                    /* tuple */[
                      log_effect,
                      "ahmet naber?"
                    ]
                  ]
                ];
      
    }
  } else if (param.tag) {
    return /* tuple */[
            Caml_int32.imul(state, param[0]),
            /* `Delay */[
              -363575453,
              /* tuple */[
                delay_effect,
                /* tuple */[
                  1000,
                  /* Set */Block.__(0, [99])
                ]
              ]
            ]
          ];
  } else {
    return /* tuple */[
            param[0],
            /* NoFx */870521875
          ];
  }
}

function hh(tag, props, children) {
  return Hyperapp_hacked.h(tag, $$Array.of_list(props), $$Array.of_list(children));
}

function view(state) {
  return hh("div", /* :: */[
              /* Attr */Block.__(0, [/* tuple */[
                    "id",
                    "garip"
                  ]]),
              /* [] */0
            ], /* :: */[
              hh("div", /* :: */[
                    /* Attr */Block.__(0, [/* tuple */[
                          "id",
                          "bibaskagarip"
                        ]]),
                    /* [] */0
                  ], /* :: */[
                    /* Text */[String(state)],
                    /* [] */0
                  ]),
              /* :: */[
                hh("button", /* :: */[
                      /* Handler */Block.__(1, [/* tuple */[
                            "onclick",
                            /* Increment */0
                          ]]),
                      /* [] */0
                    ], /* :: */[
                      /* Text */["+"],
                      /* [] */0
                    ]),
                /* :: */[
                  hh("button", /* :: */[
                        /* Handler */Block.__(1, [/* tuple */[
                              "onclick",
                              /* DelayedIncrement */2
                            ]]),
                        /* [] */0
                      ], /* :: */[
                        /* Text */["~1000 |> +"],
                        /* [] */0
                      ]),
                  /* :: */[
                    hh("button", /* :: */[
                          /* Attr */Block.__(0, [/* tuple */[
                                "id",
                                "gulizar"
                              ]]),
                          /* :: */[
                            /* Handler */Block.__(1, [/* tuple */[
                                  "onmouseover",
                                  /* Decrement */1
                                ]]),
                            /* :: */[
                              /* Handler */Block.__(1, [/* tuple */[
                                    "onclick",
                                    /* Decrement */1
                                  ]]),
                              /* [] */0
                            ]
                          ]
                        ], /* :: */[
                          /* Text */["-"],
                          /* [] */0
                        ]),
                    /* :: */[
                      hh("button", /* :: */[
                            /* Handler */Block.__(1, [/* tuple */[
                                  "onclick",
                                  /* Set */Block.__(0, [24])
                                ]]),
                            /* [] */0
                          ], /* :: */[
                            /* Text */["Set to 42"],
                            /* [] */0
                          ]),
                      /* :: */[
                        hh("button", /* :: */[
                              /* Handler */Block.__(1, [/* tuple */[
                                    "onclick",
                                    /* Mult */Block.__(1, [2])
                                  ]]),
                              /* [] */0
                            ], /* :: */[
                              /* Text */["mult * 2"],
                              /* [] */0
                            ]),
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

app(/* record */[
      /* init */init,
      /* update */update,
      /* view */view,
      /* subscriptions */subscriptions,
      /* node */document.getElementById("app")
    ]);

exports.App = App;
exports.EffectTest = EffectTest;
exports.SubTest = SubTest;
exports.init = init;
exports.subscriptions = subscriptions;
exports.update = update;
exports.hh = hh;
exports.view = view;
/*  Not a pure module */
