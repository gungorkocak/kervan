// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function get_handlers(node) {
  var match = node.handlers;
  if (match !== undefined) {
    return Caml_option.valFromOption(match);
  } else {
    return { };
  }
}

function event_1(param) {
  console.log("clicked!");
  return /* () */0;
}

var node = document.getElementById("app");

console.log(node.parentNode);

console.log(node.nodeName.toLowerCase());

console.log(node.childNodes);

var btn_1 = document.getElementById("increment");

var btn_handlers = get_handlers(btn_1);

btn_handlers["click"] = event_1;

var match = Js_dict.get(btn_handlers, "click");

if (match !== undefined) {
  console.log("Here is evt handler", match);
} else {
  console.log("No evt handler found");
}

var btn_2 = document.getElementById("decrement");

if (btn_2.hasAttribute("disabled")) {
  console.log("attr disabled found:::", btn_2.getAttribute("disabled"));
} else {
  console.log("attr disabled not found");
}

if (btn_1.hasAttribute("disabled")) {
  console.log("disabled found for btn_1");
} else {
  console.log("setting disabled for btn_1", (btn_1.setAttribute("disabled", ""), /* () */0));
}

var btn_3 = document.getElementById("not-focus");

console.log("removing autofocus attr", (btn_3.removeAttribute("autofocus"), /* () */0));

var text_node = document.createTextNode("this is text");

console.log("text node here", text_node);

var svg_node = document.createElementNS("http://www.w3.org/2000/svg", "svg");

console.log("here is svg element", svg_node);

console.log("appending child to node", (node.appendChild(svg_node), /* () */0));

var heading_1 = document.getElementById("heading1");

var text_1 = heading_1.firstChild;

console.log("getting node value", text_1.nodeValue);

console.log("setting node value", (text_1.nodeValue = "naber ahmet?", /* () */0));

console.log("inserting before", (heading_1.insertBefore(text_node, text_1), /* () */0));

console.log("removing child", (heading_1.removeChild(text_1), /* () */0));

exports.get_handlers = get_handlers;
exports.event_1 = event_1;
/* node Not a pure module */
