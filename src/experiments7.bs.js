// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Superfine1 = require("./superfine1");

function one(fn) {
  return /* FxOne */[fn];
}

function run(fx, dispatch) {
  if (fx) {
    return Curry._1(fx[0], dispatch);
  } else {
    return /* () */0;
  }
}

var Fx = /* module */[
  /* none : FxNone */0,
  /* one */one,
  /* run */run
];

function h(prim, prim$1, prim$2) {
  return Superfine1.h(prim, prim$1, prim$2);
}

function patch(prim, prim$1, prim$2) {
  Superfine1.patch(prim, prim$1, prim$2);
  return /* () */0;
}

function hh(tag, props, children) {
  return Superfine1.h(tag, $$Array.of_list(props), $$Array.of_list(children));
}

function app(param) {
  var node = param[/* node */3];
  var view = param[/* view */2];
  var update = param[/* update */1];
  var state = /* record */[/* contents */Curry._1(param[/* init */0], /* () */0)];
  var dispatch_fn = /* record */[/* contents */(function (msg, param) {
        return /* () */0;
      })];
  var dispatch = function (msg) {
    return Curry._1(dispatch_fn[0], msg);
  };
  var render = function (state, dispatch) {
    patch(node, Curry._1(view, state), dispatch);
    return /* () */0;
  };
  dispatch_fn[0] = (function (msg, param) {
      var match = Curry._2(update, state[0], msg);
      run(match[1], dispatch);
      var next_state = match[0];
      state[0] = next_state;
      return render(state[0], dispatch);
    });
  patch(node, Curry._1(view, state[0]), dispatch);
  return render(state[0], dispatch);
}

var App = /* module */[
  /* h */h,
  /* patch */patch,
  /* hh */hh,
  /* app */app
];

function log(str, param) {
  console.log(str);
  return /* () */0;
}

function delay(ms, msg, dispatch) {
  setTimeout((function (param) {
          return Curry._2(dispatch, msg, /* () */0);
        }), ms);
  return /* () */0;
}

var EffectTest = /* module */[
  /* log */log,
  /* delay */delay
];

function init(param) {
  return 0;
}

function update(state, param) {
  switch (param) {
    case 0 : 
        return /* tuple */[
                state + 1 | 0,
                /* FxNone */0
              ];
    case 1 : 
        return /* tuple */[
                state - 1 | 0,
                /* FxOne */[(function (param) {
                      console.log(state);
                      return /* () */0;
                    })]
              ];
    case 2 : 
        return /* tuple */[
                Caml_int32.imul(state, state),
                /* FxNone */0
              ];
    case 3 : 
        return /* tuple */[
                state + 1 | 0,
                /* FxOne */[(function (param) {
                      return delay(1000, /* Power */2, param);
                    })]
              ];
    
  }
}

function view(state) {
  return hh("div", /* :: */[
              /* Attr */Block.__(0, [/* tuple */[
                    "id",
                    "hello"
                  ]]),
              /* [] */0
            ], /* :: */[
              hh("div", /* :: */[
                    /* Attr */Block.__(0, [/* tuple */[
                          "id",
                          "naber"
                        ]]),
                    /* [] */0
                  ], /* :: */[
                    /* Text */[String(state)],
                    /* [] */0
                  ]),
              /* :: */[
                hh("button", /* :: */[
                      /* Attr */Block.__(0, [/* tuple */[
                            "id",
                            "btn-inc"
                          ]]),
                      /* :: */[
                        /* Handler */Block.__(1, [/* tuple */[
                              "onclick",
                              /* Boost */3
                            ]]),
                        /* [] */0
                      ]
                    ], /* :: */[
                      /* Text */["++"],
                      /* [] */0
                    ]),
                /* :: */[
                  hh("button", /* :: */[
                        /* Attr */Block.__(0, [/* tuple */[
                              "id",
                              "btn-inc"
                            ]]),
                        /* :: */[
                          /* Handler */Block.__(1, [/* tuple */[
                                "onclick",
                                /* Increment */0
                              ]]),
                          /* [] */0
                        ]
                      ], /* :: */[
                        /* Text */["+"],
                        /* [] */0
                      ]),
                  /* :: */[
                    hh("button", /* :: */[
                          /* Attr */Block.__(0, [/* tuple */[
                                "id",
                                "btn-dec"
                              ]]),
                          /* :: */[
                            /* Handler */Block.__(1, [/* tuple */[
                                  "onclick",
                                  /* Decrement */1
                                ]]),
                            /* [] */0
                          ]
                        ], /* :: */[
                          /* Text */["-"],
                          /* [] */0
                        ]),
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

app(/* record */[
      /* init */init,
      /* update */update,
      /* view */view,
      /* node */document.getElementById("app")
    ]);

exports.Fx = Fx;
exports.App = App;
exports.EffectTest = EffectTest;
exports.init = init;
exports.update = update;
exports.view = view;
/*  Not a pure module */
