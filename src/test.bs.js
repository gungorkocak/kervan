// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var App$BgTestParcel = require("./app.bs.js");

function log(str, param) {
  console.log(str);
  return /* () */0;
}

function delay(ms, msg, dispatch) {
  setTimeout((function (param) {
          return Curry._1(dispatch, msg);
        }), ms);
  return /* () */0;
}

var EffectTest = /* module */[
  /* log */log,
  /* delay */delay
];

function every(key, ms, msg) {
  var every_effect = function (dispatch) {
    var id = setInterval((function (param) {
            return Curry._1(dispatch, msg);
          }), ms);
    return (function (param) {
        clearInterval(id);
        return /* () */0;
      });
  };
  return App$BgTestParcel.Sub[/* start */1](key, every_effect);
}

var SubTest = /* module */[/* every */every];

function init(param) {
  return 0;
}

function sub_key(count) {
  if (count >= 20) {
    return "ahmet5";
  } else {
    return "ahmet";
  }
}

function subscriptions(state) {
  return /* :: */[
          App$BgTestParcel.Sub[/* none */0],
          /* :: */[
            every(sub_key(state), 1000, /* Increment */0),
            /* [] */0
          ]
        ];
}

function update(state, param) {
  switch (param) {
    case 0 : 
        return /* tuple */[
                state + 1 | 0,
                App$BgTestParcel.Fx[/* none */0]
              ];
    case 1 : 
        return /* tuple */[
                state - 1 | 0,
                App$BgTestParcel.Fx[/* one */1]((function (param) {
                        console.log(state);
                        return /* () */0;
                      }))
              ];
    case 2 : 
        return /* tuple */[
                Caml_int32.imul(state, state),
                App$BgTestParcel.Fx[/* none */0]
              ];
    case 3 : 
        return /* tuple */[
                state + 1 | 0,
                App$BgTestParcel.Fx[/* one */1]((function (param) {
                        return delay(1000, /* Power */2, param);
                      }))
              ];
    
  }
}

function view(state) {
  return App$BgTestParcel.vnode(undefined, "div", /* :: */[
              /* Attr */Block.__(0, [/* tuple */[
                    "id",
                    "hello"
                  ]]),
              /* [] */0
            ], /* :: */[
              App$BgTestParcel.vnode(undefined, "div", /* :: */[
                    /* Attr */Block.__(0, [/* tuple */[
                          "id",
                          "naber"
                        ]]),
                    /* [] */0
                  ], /* :: */[
                    App$BgTestParcel.text(undefined, String(state)),
                    /* [] */0
                  ]),
              /* :: */[
                App$BgTestParcel.vnode(undefined, "button", /* :: */[
                      /* Attr */Block.__(0, [/* tuple */[
                            "id",
                            "btn-inc"
                          ]]),
                      /* :: */[
                        /* Handler */Block.__(1, [/* tuple */[
                              "click",
                              /* Boost */3
                            ]]),
                        /* [] */0
                      ]
                    ], /* :: */[
                      App$BgTestParcel.text(undefined, "++"),
                      /* [] */0
                    ]),
                /* :: */[
                  App$BgTestParcel.vnode(undefined, "button", /* :: */[
                        /* Attr */Block.__(0, [/* tuple */[
                              "id",
                              "btn-inc"
                            ]]),
                        /* :: */[
                          /* Handler */Block.__(1, [/* tuple */[
                                "click",
                                /* Increment */0
                              ]]),
                          /* [] */0
                        ]
                      ], /* :: */[
                        App$BgTestParcel.text(undefined, "+"),
                        /* [] */0
                      ]),
                  /* :: */[
                    App$BgTestParcel.vnode(undefined, "button", /* :: */[
                          /* Attr */Block.__(0, [/* tuple */[
                                "id",
                                "btn-dec"
                              ]]),
                          /* :: */[
                            /* Handler */Block.__(1, [/* tuple */[
                                  "click",
                                  /* Decrement */1
                                ]]),
                            /* [] */0
                          ]
                        ], /* :: */[
                          App$BgTestParcel.text(undefined, "-"),
                          /* [] */0
                        ]),
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

App$BgTestParcel.app(/* record */[
      /* init */init,
      /* update */update,
      /* view */view,
      /* subscriptions */subscriptions,
      /* node */document.getElementById("app")
    ]);

exports.EffectTest = EffectTest;
exports.SubTest = SubTest;
exports.init = init;
exports.sub_key = sub_key;
exports.subscriptions = subscriptions;
exports.update = update;
exports.view = view;
/*  Not a pure module */
